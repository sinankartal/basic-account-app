{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class TokenService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n  }\n  login(username, password) {\n    const body = {\n      username,\n      password\n    };\n    return this.http.post(this.apiUrl + `Token/login?username=${username}&password=${password}`, {}, this.httpOptions);\n  }\n}\nTokenService.ɵfac = function TokenService_Factory(t) {\n  return new (t || TokenService)(i0.ɵɵinject(i1.HttpClient));\n};\nTokenService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: TokenService,\n  factory: TokenService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,WAAW,QAAsB,sBAAsB;;;AAO5E,OAAM,MAAOC,YAAY;EAGvBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAGJ,WAAW,CAACK,MAAM;IAG3B,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;EAHsC;EAKvCM,KAAK,CAACC,QAAgB,EAAEC,QAAgB;IACtC,MAAMC,IAAI,GAAG;MAAEF,QAAQ;MAAEC;IAAQ,CAAE;IACnC,OAAO,IAAI,CAACL,IAAI,CAACO,IAAI,CACnB,IAAI,CAACN,MAAM,GAAG,wBAAwBG,QAAQ,aAAaC,QAAQ,EAAE,EACrE,EAAE,EACF,IAAI,CAACG,WAAW,CACjB;EACH;;AAfWV,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;SAAZA,YAAY;EAAAW,SAAZX,YAAY;EAAAY,YAFX;AAAM","names":["environment","HttpHeaders","TokenService","constructor","http","apiUrl","headers","login","username","password","body","post","httpOptions","factory","providedIn"],"sourceRoot":"","sources":["/Users/sinankartal/RiderProjects/basic-account-app/Frontend/Account-UI/src/service/token-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { Token } from 'src/model/models';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class TokenService {\n  apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  login(username: string, password: string): Observable<Token> {\n    const body = { username, password };\n    return this.http.post<Token>(\n      this.apiUrl + `Token/login?username=${username}&password=${password}`,\n      {},\n      this.httpOptions\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}