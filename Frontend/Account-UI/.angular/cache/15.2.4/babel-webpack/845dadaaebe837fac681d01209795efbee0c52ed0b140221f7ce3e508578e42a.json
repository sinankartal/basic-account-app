{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class UserService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.token = localStorage.getItem('token');\n  }\n  getUserList() {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    return this.http.get(this.apiUrl + 'user/all', {\n      headers\n    });\n  }\n  getUserAccounts(userId) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    return this.http.get(this.apiUrl + 'user/' + userId + '/accounts', {\n      headers\n    });\n  }\n}\nUserService.ɵfac = function UserService_Factory(t) {\n  return new (t || UserService)(i0.ɵɵinject(i1.HttpClient));\n};\nUserService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: UserService,\n  factory: UserService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,WAAW,QAAsB,sBAAsB;;;AAM5E,OAAM,MAAOC,WAAW;EAGtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAGJ,WAAW,CAACK,MAAM;IAG3B,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAED,UAAK,GAAGM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EALE;EAOvCC,WAAW;IACT,MAAMH,OAAO,GAAG,IAAIL,WAAW,EAAE,CAACS,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,KAAK,EAAE,CACvB;IAED,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAS,IAAI,CAACP,MAAM,GAAG,UAAU,EAAE;MAAEC;IAAO,CAAE,CAAC;EACrE;EAEAO,eAAe,CAACC,MAAc;IAC5B,MAAMR,OAAO,GAAG,IAAIL,WAAW,EAAE,CAACS,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,KAAK,EAAE,CACvB;IAED,OAAO,IAAI,CAACP,IAAI,CAACQ,GAAG,CAAkB,IAAI,CAACP,MAAM,GAAG,OAAO,GAAGS,MAAM,GAAG,WAAW,EAAE;MAClFR;KACD,CAAC;EACJ;;AA5BWJ,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAa,SAAXb,WAAW;EAAAc,YAFV;AAAM","names":["environment","HttpHeaders","UserService","constructor","http","apiUrl","headers","localStorage","getItem","getUserList","set","token","get","getUserAccounts","userId","factory","providedIn"],"sourceRoot":"","sources":["/Users/sinankartal/RiderProjects/basic-account-app/Frontend/Account-UI/src/service/user-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, UserAccountsDTO } from '../model/models';\n@Injectable({\n  providedIn: 'root',\n})\nexport class UserService {\n  apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  token = localStorage.getItem('token');\n\n  getUserList(): Observable<User[]> {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.token}`\n    );\n\n    return this.http.get<User[]>(this.apiUrl + 'user/all', { headers });\n  }\n\n  getUserAccounts(userId: string): Observable<UserAccountsDTO> {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.token}`\n    );\n\n    return this.http.get<UserAccountsDTO>(this.apiUrl + 'user/' + userId + '/accounts', {\n      headers,\n    });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}