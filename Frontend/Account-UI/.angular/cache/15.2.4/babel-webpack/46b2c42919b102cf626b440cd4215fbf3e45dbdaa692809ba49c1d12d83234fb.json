{"ast":null,"code":"import { environment } from 'src/environments/environment';\nimport { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class AccountService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = environment.apiUrl;\n    this.httpOptions = {\n      headers: new HttpHeaders({\n        'Content-Type': 'application/json'\n      })\n    };\n    this.token = localStorage.getItem('token');\n  }\n  create(userId, initialAmount) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    return this.http.post(this.apiUrl + 'account/create', {\n      userId: userId,\n      initialAmount: initialAmount\n    }, {\n      headers\n    });\n  }\n  addTransaction(accountId, amount) {\n    const headers = new HttpHeaders().set('Authorization', `Bearer ${this.token}`);\n    return this.http.post(this.apiUrl + 'account/add-transaction', {\n      accountId: accountId,\n      amount: amount\n    }, {\n      headers\n    });\n  }\n}\nAccountService.ɵfac = function AccountService_Factory(t) {\n  return new (t || AccountService)(i0.ɵɵinject(i1.HttpClient));\n};\nAccountService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: AccountService,\n  factory: AccountService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAASA,WAAW,QAAQ,8BAA8B;AAC1D,SAAqBC,WAAW,QAAsB,sBAAsB;;;AAM5E,OAAM,MAAOC,cAAc;EAGzBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAGJ,WAAW,CAACK,MAAM;IAG3B,gBAAW,GAAG;MACZC,OAAO,EAAE,IAAIL,WAAW,CAAC;QAAE,cAAc,EAAE;MAAkB,CAAE;KAChE;IAED,UAAK,GAAGM,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EALE;EAOvCC,MAAM,CAACC,MAAc,EAAEC,aAAqB;IAC1C,MAAML,OAAO,GAAG,IAAIL,WAAW,EAAE,CAACW,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,KAAK,EAAE,CACvB;IAED,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CACnB,IAAI,CAACT,MAAM,GAAG,gBAAgB,EAC9B;MAAEK,MAAM,EAAEA,MAAM;MAAEC,aAAa,EAAEA;IAAa,CAAE,EAChD;MAAEL;IAAO,CAAE,CACZ;EACH;EAEAS,cAAc,CAACC,SAAiB,EAAEC,MAAc;IAC9C,MAAMX,OAAO,GAAG,IAAIL,WAAW,EAAE,CAACW,GAAG,CACnC,eAAe,EACf,UAAU,IAAI,CAACC,KAAK,EAAE,CACvB;IAED,OAAO,IAAI,CAACT,IAAI,CAACU,IAAI,CACnB,IAAI,CAACT,MAAM,GAAG,yBAAyB,EACvC;MAAEW,SAAS,EAAEA,SAAS;MAAEC,MAAM,EAAEA;IAAM,CAAE,EACxC;MAAEX;IAAO,CAAE,CACZ;EACH;;AAlCWJ,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;SAAdA,cAAc;EAAAgB,SAAdhB,cAAc;EAAAiB,YAFb;AAAM","names":["environment","HttpHeaders","AccountService","constructor","http","apiUrl","headers","localStorage","getItem","create","userId","initialAmount","set","token","post","addTransaction","accountId","amount","factory","providedIn"],"sourceRoot":"","sources":["/Users/sinankartal/RiderProjects/basic-account-app/Frontend/Account-UI/src/service/account-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { environment } from 'src/environments/environment';\nimport { HttpClient, HttpHeaders, HttpResponse } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { User, UserAccountsDTO } from '../model/models';\n@Injectable({\n  providedIn: 'root',\n})\nexport class AccountService {\n  apiUrl = environment.apiUrl;\n\n  constructor(private http: HttpClient) {}\n  httpOptions = {\n    headers: new HttpHeaders({ 'Content-Type': 'application/json' }),\n  };\n\n  token = localStorage.getItem('token');\n\n  create(userId: string, initialAmount: number): Observable<string> {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.token}`\n    );\n\n    return this.http.post<string>(\n      this.apiUrl + 'account/create',\n      { userId: userId, initialAmount: initialAmount },\n      { headers }\n    );\n  }\n\n  addTransaction(accountId: string, amount: number): Observable<string> {\n    const headers = new HttpHeaders().set(\n      'Authorization',\n      `Bearer ${this.token}`\n    );\n\n    return this.http.post<string>(\n      this.apiUrl + 'account/add-transaction',\n      { accountId: accountId, amount: amount },\n      { headers }\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}