{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"src/service/token-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nexport class LoginComponent {\n  constructor(tokenService, router) {\n    this.tokenService = tokenService;\n    this.router = router;\n    this.username = '';\n    this.password = '';\n    console.log('LoginComponent created!');\n  }\n  onSubmit() {\n    this.tokenService.login(this.username, this.password).subscribe(result => {\n      const token = result;\n      console.log('Login successful!', result);\n      localStorage.setItem('token', token.token);\n      this.router.navigate(['/user-list']);\n    }, error => {\n      console.log('Login failed:', error);\n    });\n  }\n}\nLoginComponent.ɵfac = function LoginComponent_Factory(t) {\n  return new (t || LoginComponent)(i0.ɵɵdirectiveInject(i1.TokenService), i0.ɵɵdirectiveInject(i2.Router));\n};\nLoginComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginComponent,\n  selectors: [[\"app-login\"]],\n  decls: 14,\n  vars: 2,\n  consts: [[1, \"container\"], [3, \"submit\"], [1, \"form-group\"], [\"type\", \"text\", \"name\", \"username\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"password\", \"name\", \"password\", \"required\", \"\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\"]],\n  template: function LoginComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"form\", 1);\n      i0.ɵɵlistener(\"submit\", function LoginComponent_Template_form_submit_1_listener() {\n        return ctx.onSubmit();\n      });\n      i0.ɵɵelementStart(2, \"h3\");\n      i0.ɵɵtext(3, \"Login\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"div\", 2)(5, \"label\");\n      i0.ɵɵtext(6, \"Username\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(7, \"input\", 3);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_7_listener($event) {\n        return ctx.username = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(8, \"div\", 2)(9, \"label\");\n      i0.ɵɵtext(10, \"Password\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(11, \"input\", 4);\n      i0.ɵɵlistener(\"ngModelChange\", function LoginComponent_Template_input_ngModelChange_11_listener($event) {\n        return ctx.password = $event;\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(12, \"button\", 5);\n      i0.ɵɵtext(13, \"Login\");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngModel\", ctx.username);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngModel\", ctx.password);\n    }\n  },\n  dependencies: [i3.ɵNgNoValidate, i3.DefaultValueAccessor, i3.NgControlStatus, i3.NgControlStatusGroup, i3.RequiredValidator, i3.NgModel, i3.NgForm],\n  styles: [\"form[_ngcontent-%COMP%] {\\n  display: flex;\\n  flex-direction: column;\\n  align-items: center;\\n  margin-top: 100px;\\n}\\n\\nlabel[_ngcontent-%COMP%], input[_ngcontent-%COMP%] {\\n  margin-bottom: 20px;\\n}\\n\\nbutton[_ngcontent-%COMP%] {\\n  padding: 10px 20px;\\n  font-size: 16px;\\n  background-color: #007bff;\\n  color: white;\\n  border: none;\\n  border-radius: 5px;\\n  cursor: pointer;\\n}\\n\\nbutton[_ngcontent-%COMP%]:hover {\\n  background-color: #0069d9;\\n}\\n\\n.btn-primary[_ngcontent-%COMP%] {\\n  color: var(--button-color);\\n  background-color: var(--button-background-color);\\n  border-radius: var(--border-radius);\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4uY29tcG9uZW50LnNjc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFBO0VBQ0Esc0JBQUE7RUFDQSxtQkFBQTtFQUNBLGlCQUFBO0FBQ0Y7O0FBRUE7RUFDRSxtQkFBQTtBQUNGOztBQUVBO0VBQ0Usa0JBQUE7RUFDQSxlQUFBO0VBQ0EseUJBQUE7RUFDQSxZQUFBO0VBQ0EsWUFBQTtFQUNBLGtCQUFBO0VBQ0EsZUFBQTtBQUNGOztBQUVBO0VBQ0UseUJBQUE7QUFDRjs7QUFHQTtFQUNFLDBCQUFBO0VBQ0EsZ0RBQUE7RUFDQSxtQ0FBQTtBQUFGIiwic291cmNlc0NvbnRlbnQiOlsiZm9ybSB7XG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gIG1hcmdpbi10b3A6IDEwMHB4O1xufVxuXG5sYWJlbCwgaW5wdXQge1xuICBtYXJnaW4tYm90dG9tOiAyMHB4O1xufVxuXG5idXR0b24ge1xuICBwYWRkaW5nOiAxMHB4IDIwcHg7XG4gIGZvbnQtc2l6ZTogMTZweDtcbiAgYmFja2dyb3VuZC1jb2xvcjogIzAwN2JmZjtcbiAgY29sb3I6IHdoaXRlO1xuICBib3JkZXI6IG5vbmU7XG4gIGJvcmRlci1yYWRpdXM6IDVweDtcbiAgY3Vyc29yOiBwb2ludGVyO1xufVxuXG5idXR0b246aG92ZXIge1xuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMDA2OWQ5O1xufVxuXG5cbi5idG4tcHJpbWFyeSB7XG4gIGNvbG9yOiB2YXIoLS1idXR0b24tY29sb3IpO1xuICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1idXR0b24tYmFja2dyb3VuZC1jb2xvcik7XG4gIGJvcmRlci1yYWRpdXM6IHZhcigtLWJvcmRlci1yYWRpdXMpO1xufVxuIl0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";;;;AAUA,OAAM,MAAOA,cAAc;EAIzBC,YAAoBC,YAA0B,EAAUC,MAAc;IAAlD,iBAAY,GAAZD,YAAY;IAAwB,WAAM,GAANC,MAAM;IAH9D,aAAQ,GAAG,EAAE;IACb,aAAQ,GAAG,EAAE;IAGXC,OAAO,CAACC,GAAG,CAAC,yBAAyB,CAAC;EACxC;EACAC,QAAQ;IACN,IAAI,CAACJ,YAAY,CAACK,KAAK,CAAC,IAAI,CAACC,QAAQ,EAAE,IAAI,CAACC,QAAQ,CAAC,CAACC,SAAS,CAC7DC,MAAM,IAAG;MACP,MAAMC,KAAK,GAAGD,MAAM;MACpBP,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEM,MAAM,CAAC;MACxCE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEF,KAAK,CAACA,KAAK,CAAC;MAC1C,IAAI,CAACT,MAAM,CAACY,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IACtC,CAAC,EACAC,KAAK,IAAI;MACRZ,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEW,KAAK,CAAC;IACrC,CAAC,CACF;EACH;;AAnBWhB,cAAc;mBAAdA,cAAc;AAAA;AAAdA,cAAc;QAAdA,cAAc;EAAAiB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCV3BC,8BAAuB;MACfA;QAAA,OAAUC,cAAU;MAAA,EAAC;MACzBD,0BAAI;MAAAA,qBAAK;MAAAA,iBAAK;MACdA,8BAAwB;MACfA,wBAAQ;MAAAA,iBAAQ;MACvBA,gCAAwF;MAAhDA;QAAA;MAAA,EAAsB;MAA9DA,iBAAwF;MAE1FA,8BAAwB;MACfA,yBAAQ;MAAAA,iBAAQ;MACvBA,iCAA4F;MAAhDA;QAAA;MAAA,EAAsB;MAAlEA,iBAA4F;MAE9FA,kCAA8C;MAAAA,sBAAK;MAAAA,iBAAS;;;MANlBA,eAAsB;MAAtBA,sCAAsB;MAIlBA,eAAsB;MAAtBA,sCAAsB","names":["LoginComponent","constructor","tokenService","router","console","log","onSubmit","login","username","password","subscribe","result","token","localStorage","setItem","navigate","error","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["/Users/sinankartal/RiderProjects/basic-account-app/Frontend/Account-UI/src/app/login/login.component.ts","/Users/sinankartal/RiderProjects/basic-account-app/Frontend/Account-UI/src/app/login/login.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Token } from 'src/model/models';\nimport { TokenService } from 'src/service/token-service';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent {\n  username = '';\n  password = '';\n\n  constructor(private tokenService: TokenService, private router: Router) {\n    console.log('LoginComponent created!');\n  }\n  onSubmit() {\n    this.tokenService.login(this.username, this.password).subscribe(\n      result => {\n        const token = result;\n        console.log('Login successful!', result);\n        localStorage.setItem('token', token.token);\n        this.router.navigate(['/user-list']);\n      },\n      (error) => {\n        console.log('Login failed:', error);\n      }\n    );\n  }\n}\n","<div class=\"container\">\n  <form (submit)=\"onSubmit()\">\n    <h3>Login</h3>\n    <div class=\"form-group\">\n      <label>Username</label>\n      <input type=\"text\" class=\"form-control\" [(ngModel)]=\"username\" name=\"username\" required>\n    </div>\n    <div class=\"form-group\">\n      <label>Password</label>\n      <input type=\"password\" class=\"form-control\" [(ngModel)]=\"password\" name=\"password\" required>\n    </div>\n    <button type=\"submit\" class=\"btn btn-primary\">Login</button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}